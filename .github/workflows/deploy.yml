name: Deploy to Staging

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: write
  deployments: write

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build the Ezinn Admin app
        run: npm run build

      - name: Get commit SHA
        id: vars
        run: echo "${{ steps.vars.outputs.sha_short }}" > commit-sha.txt

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/ezinn-admin:${{ steps.vars.outputs.sha_short }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ezinn-admin:${{ steps.vars.outputs.sha_short }}

      - name: Upload commit SHA as artifact
        uses: actions/upload-artifact@v3
        with:
          name: commit-sha
          path: ./commit-sha.txt

  deploy-to-vps:
    runs-on: ubuntu-latest
    needs: build-docker-image

    steps:
      - name: Download commit SHA artifact
        uses: actions/download-artifact@v3
        with:
          name: commit-sha

      - name: Read commit SHA
        id: vars
        run: echo "sha=$(cat commit-sha.txt)" >> $GITHUB_ENV

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            docker stop ezinn-admin || true
            docker rm ezinn-admin || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/ezinn-admin:${{ env.sha }}
            docker run -d --name ezinn-admin -p 3001:3001 ${{ secrets.DOCKER_USERNAME }}/ezinn-admin:${{ env.sha }}

      - name: Run deployment action in Jira
        uses: chrnorm/deployment-action@releases/v1
        with:
          environment: "staging"
          token: ${{ secrets.GITHUB_TOKEN }}
          description: "Deploying ezinn-admin to staging via Docker"

  cleanup:
    runs-on: ubuntu-latest
    if: always() # Run this job even if the build fails

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove old Docker images from VPS
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            docker image prune -f --filter "until=24h"

      - name: Remove old images from Docker Hub
        run: |
          images=$(docker images -q --filter "dangling=true")
          if [ -n "$images" ]; then
            docker rmi $images
          fi
